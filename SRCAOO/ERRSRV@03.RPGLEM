      *& Apache License
      *****************************************************************************************
      *                                                                                       *
      * Copyright (c) 2008-2018 TEMBO Technology Lab (Pty) Ltd.                               *
      * Created by AO Foundation - www.adsero-optima.com                                      *
      * Original TEMPLATE author: Tommy Atkins - Chief Development Officer                    *
      *                                                                                       *
      * All source rendered by AO Foundation, based on harvested information from S2E Models  *
      * retrieved and recovered with the consent of Axiom Systems Africa Pty (Ltd)            *
      * from their Infologic application, subject to the Apache License, Version 2.0 terms.   *
      * (http://www.axiom.co.za/index.php/solutions/application-systems/infologic)            *
      *                                                                                       *
      * Licensed under the Apache License, Version 2.0 (the "License");                       *
      * you may not use this file except in compliance with the License.                      *
      * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0    *
      *                                                                                       *
      * Unless required by applicable law or agreed to in writing, software                   *
      * distributed under the License is distributed on an "AS IS" BASIS,                     *
      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.              *
      * See the License for the specific language governing permissions and                   *
      * limitations under the License.                                                        *
      *                                                                                       *
      * The above copyright notice and this permission notice shall be included in all copies *
      * or substantial portions of the Software.                                              *
      *                                                                                       *
      *                            http://www.i-nterprise.org/                                *
      *                                                                                       *
      *****************************************************************************************
      *===============================================================
     h nomain aut(*use)
      *===============================================================
      *& Open Source Error Handlers #03
      *    RTVCSTK00: Basic Current Job Information - Returns Internal Job Id (16)
      *    GetCSE1  : Retrieve Target CSE for Error Handlers
      *    PEP      : Check if CSE is PEP
      * These routines are used exclusively by the other "Error Handler" modules
      * and will not be used by external programs.
      *& =============================================================
      /copy SRCCPY,API_EC#                       API Error Data Structure
      /copy SRCCPY,ERR03#                        Move *DIAG and Resend *ESCAPE Messages
     d RTVCSTK00       pr
     d GetCSE1         pr            10i 0
     d PEP             pr              n
      *& =============================================================
     d QWVRCSTK        pr                  extpgm('QWVRCSTK')
     d  Rcvr                       4096    options(*varsize)
     d  RcvrL                        10i 0
     d  RcvFmt                        8    const
     d  JobIdInf                     26    const options(*varsize)
     d  JobIdFmt                      8    const
     d  ErrorCode                          like(EC)
      *++++++++
     d JobIdInf        ds
     d  JobName                      10    inz('*')
     d  UserName                     10    inz(' ')
     d  JobNo                         6    inz(' ')
     d  IntJobId                     16    inz(' ')
     d  Rsvd1                         2    inz(x'0000')
     d  ThreadInd                    10i 0 inz(1)
     d  ThreadId                      8    inz(x'0000000000000000')
      *++++++++
     d CS0100P         s               *   inz(%addr(CS0100))
     d CS0100L         s             10i 0 inz(%len(CS0100))
     d CS0100          ds         65534
     d   BytesRet                    10i 0
     d   BytesAvail                  10i 0
     d   NoEntriesTh                 10i 0
     d   CallStackOS                 10i 0
     d   NoEntriesRet                10i 0
     d   ThreadIdRet                  8
     d   InfStatus                    1
     d   Resvd                        1
      *  ++++++++
     d CSEntryP        s               *
     d CSE             ds         65535    based(CSEntryP) qualified
     d  Length                       10i 0
     d  StmIdOS                      10i 0
     d  StmIdNo                      10i 0
     d  ProcNameOS                   10i 0
     d  ProcNameLen                  10i 0
     d  ReqLev                       10i 0
     d  ProgName                     10
     d  ProgLib                      10
     d  MIInstrNo                    10i 0
     d  ModName                      10
     d  ModLib                       10
     d  CntrlBndry                    1
     d  Resvd                         3
     d  ActGrpNo                     10u 0
     d  ActGrpName                   10
     d  Resvd2                        2
     d  ProgASPName                  10
     d  ProgLibName                  10
     d  ProgASPNo                    10i 0
     d  ProgLibASPNo                 10i 0
     d  ActGrpNoLong                 20u 0
      *   Reserved CHAR(*)
      *   Statement identifiers  ARRAY(*) of CHAR(10)
      *   Procedure name  CHAR(*)
      *++++++++
     d ProcNameP       s               *
     d ProcName        s            256    based(ProcNameP)
     d Procedure       s            256
      *===============================================================
      *& RTVCSTK00: Retrieve Call Stack Procedures <<<<<<<<<<<<<<<<<<<
      *===============================================================
     p RTVCSTK00       b                   export
      *=====================================================
     d I               s             10i 0
      *=====================================================
      /free
       monitor;
          //================================================
          QWVRCSTK(CS0100:CS0100L:'CSTK0100':JobIdInf:'JIDF0100':EC);
          CSEntryP = CS0100P+CallStackOS;
          //================================================
          for I = 1 to NoEntriesRet;
              ProcNameP = CSEntryP + CSE.ProcNameOS;
              Procedure = %subst(ProcName:1:CSE.ProcNameLen);
              CSEntryP += CSE.Length;
          endfor;
          //================================================
       on-error;
          ERR03();
       endmon;
          //================================================
      /end-free
      *=====================================================
     p RTVCSTK00       e
      *===============================================================
      *& GetCSE1: Retrieve Target CSE for Error Handlers <<<<<<<<<<<<<
      *===============================================================
     p GetCSE1         b                   export
     d GetCSE1         pi            10i 0
      *=====================================================
     d I               s             10i 0
      *=====================================================
      /free
       monitor;
          //================================================
          QWVRCSTK(CS0100:CS0100L:'CSTK0100':JobIdInf:'JIDF0100':EC);
          CSEntryP = CS0100P+CallStackOS;
          CSEntryP += CSE.Length;
          CSEntryP += CSE.Length;
          //================================================
          if PEP();
             return 3;
          else;
             return 2;
          endif;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
      *=====================================================
     p GetCSE1         e
      *===============================================================
      *& PEP: Check if CSE is PEP <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      *===============================================================
     p PEP             b                   export
     d PEP             pi              n
      *=====================================================
      /free
       monitor;
          //================================================
          ProcNameP = CSEntryP + CSE.ProcNameOS;
          Procedure = %subst(ProcName:1:CSE.ProcNameLen);
          if %scan('PEP':Procedure) <> 0;
              return *on;
          else;
              return *off;
          endif;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
      *=====================================================
     p PEP             e
      *===============================================================

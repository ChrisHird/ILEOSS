000100181221      *& Apache License
000200181221      *===============================================================
000300181221      *  Copyright (c) 2008-2018 TEMBO Technology Lab (Pty) Ltd.
000400181221      *  Created by AO Foundation - www.adsero-optima.com
000500181221      *  Original TEMPLATE author: Tommy Atkins - Chief Development Officer
000600181221      *
000700181221      *  Licensed under the Apache License, Version 2.0 (the "License");
000800181221      *  you may not use this file except in compliance with the License.
000900181221      *  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
001000181221      *
001100181221      *  Unless required by applicable law or agreed to in writing, software
001200181221      *  distributed under the License is distributed on an "AS IS" BASIS,
001300181221      *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
001400181221      *  See the License for the specific language governing permissions and
001500181221      *  limitations under the License.
001600181221      *
001700181221      *  The above copyright notice and this permission notice shall be included in all
001800181221      *  copies or substantial portions of the Software.
001900181221      *
002000181221      *                      http://www.adsero-optima.com/
002100181221      *& Exported Symbols ============================================
002200181227      *   EXPORT SYMBOL(DRVSRV@02A)     /* WHERE: CHAR - Uppercase           */
002300181227      *   EXPORT SYMBOL(DRVSRV@02B)     /* WHERE: CHAR - Case Sensitive      */
002400181227      *   EXPORT SYMBOL(DRVSRV@02C)     /* WHERE: NUMERIC                    */
002500181227      *   EXPORT SYMBOL(DRVSRV@02D)     /* WHERE: *ISO Date                  */
002600181227      *   EXPORT SYMBOL(DRVSRV@02E)     /* EncodeJSON                        */
002700181227      *   EXPORT SYMBOL(DRVSRV@02F)     /* Get Next Key/Value Pair           */
002800181227      *   EXPORT SYMBOL(DRVSRV@02G)     /* Unpack Array Elements             */
002900181108      *===============================================================
003000190121     h nomain aut(*use) extbinint(*yes) option(*nodebugio) debug
003100181221      *& Copy Books ==================================================
003200181221      /copy SRCCPY,ERR03                         Move *DIAG and Resend *ESCAPE Messages
003300181221      /copy SRCCPY,ERR11                         Send *ESCAPE Message
003400180926      *& Prototypes ==================================================
003500181227     d*ALPHAU          pr                  extproc('DRVSRV@02A')
003600181227     d DRVSRV@02A      pr
003700180425     d  UIName                       50    const
003800180425     d  DBName                       10    const
003900180128      *===============================================================
004000181227     d*ALPHA           pr                  extproc('DRVSRV@02B')
004100181227     d DRVSRV@02B      pr
004200180425     d  UIName                       50    const
004300180425     d  DBName                       10    const
004400160608      *===============================================================
004500181227     d*NUMERIC         pr                  extproc('DRVSRV@02C')
004600181227     d DRVSRV@02C      pr
004700180425     d  UIName                       50    const
004800180425     d  DBName                       10    const
004900180503      *===============================================================
005000181227     d*DateISO         pr                  extproc('DRVSRV@02D')
005100181227     d DRVSRV@02D      pr
005200180503     d  UIName                       50    const
005300180503     d  DBName                       10    const
005400160608      *===============================================================
005500181227     d*EncodeJSON      pr           256    extproc('DRVSRV@02E')
005600181227     d DRVSRV@02E      pr           256    varying
005700180509     d  Value                       256
005800180509     d  Len                           5i 0 const
005900180508      *===============================================================
006000181227     d*NextKV          pr                  extproc('DRVSRV@02F')
006100181227     d DRVSRV@02F      pr
006200181002      *===============================================================
006300181227     d*NextElm         pr          1024    extproc('DRVSRV@02G')
006400181227     d DRVSRV@02G      pr          1024
006500180926      *& Global Definitions ==========================================
006600181003     d KV              ds                  import qualified
006700180515     d  Key                         256    varying
006800180515     d  Value                       256    varying
006900180515      *===============================================================
007000181227     d IDP             s               *   import
007100190124     d InpData         s           4096    based(IDP)
007200190124     d InpData1        s              1    based(IDP)
007300180515      *===============================================================
007400180925     d SQL$P           s               *   import
007500180928     d SQL$            s           4096    based(SQL$P) varying
007600180926      *===============================================================
007700180926     d Upper           c                   'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
007800180926     d Lower           c                   'abcdefghijklmnopqrstuvwxyz'
007900180509      *=====================================================
008000180509     d JSON            ds
008100180515     d  Specials                      8    inz('{}[]",%:')
008200180515     d  HexVal                       16    inz('7B7D5B5D222C253A')
008300180515     d  Hex                           2    dim(8) overlay(HexVal)
008400180926      *& Build Alpha into SQL String (Upper) <<<<<<<<<<<<<<<<<<<<<<<<<
008500181227     p DRVSRV@02A      b                   export
008600180926     d                 pi
008700180425     d  UIName                       50    const
008800180425     d  DBName                       10    const
008900160608      *=====================================================
009000180425     d Pos             s             10i 0
009100180425     d Value           s           1024
009200160608      *=====================================================
009300160608      /free
009400160608       monitor;
009500160608          //================================================
009600180927          Pos = %scan('"'+%trim(UIName)+'":"':InpData);
009700180425          //================================================
009800180425          if Pos = 0;
009900180425             return;
010000180425          endif;
010100180425          //================================================
010200190124          IDP += Pos+(%len(%trim(UIName)) + 3);
010300180425          //================================================
010400180927          if InpData1 = '"';
010500180425             return;
010600180425          endif;
010700180425          //================================================
010800180425          if %len(SQL$) > 0;
010900180515             SQL$ += ' AND';
011000180425          endif;
011100180425          //================================================
011200180425          SQL$ += ' UPPER('+%trim(DBName)+')';
011300180425          //================================================
011400180927          Pos = %scan('"':InpData);
011500180927          Value = %subst(InpData:1:Pos-1);
011600180425          //================================================
011700180425          if %scan('%':Value) > 0;
011800180425             SQL$ += ' LIKE ';
011900180425          else;
012000180425             SQL$ += ' = ';
012100180425          endif;
012200180425          //================================================
012300180425          SQL$ += ''''+%xlate(Lower:Upper:%trim(Value))+'''';
012400160608          //================================================
012500180425       on-error;
012600180926          ERR03();
012700160608       endmon;
012800160608      /end-free
012900160608      *=====================================================
013000180926     p                 e
013100160608      *===============================================================
013200180926      *& Build Alpha into SQL String (Case Sensitive) <<<<<<<<<<<<<<<<
013300181227     p DRVSRV@02B      b                   export
013400181221     d                 pi
013500180425     d  UIName                       50    const
013600180425     d  DBName                       10    const
013700180128      *=====================================================
013800180425     d Pos             s             10i 0
013900180425     d Value           s           1024
014000180128      *=====================================================
014100180128      /free
014200180128       monitor;
014300180128          //================================================
014400180927          Pos = %scan('"'+%trim(UIName)+'":"':InpData);
014500180425          //================================================
014600180425          if Pos = 0;
014700180425             return;
014800180425          endif;
014900180425          //================================================
015000190124          IDP += Pos+(%len(%trim(UIName)) + 3);
015100180425          //================================================
015200180927          if %subst(InpData:1:1) = '"';
015300180425             return;
015400180425          endif;
015500180425          //================================================
015600180425          if %len(SQL$) > 0;
015700180425             SQL$ += ' AND ';
015800180425          endif;
015900180425          //================================================
016000180425          SQL$ += %trim(DBName);
016100180425          //================================================
016200180927          Pos = %scan('"':InpData);
016300180927          Value = %subst(InpData:1:Pos-1);
016400180425          //================================================
016500180425          if %scan('%':Value) > 0;
016600180425             SQL$ += ' LIKE ';
016700180425          else;
016800180425             SQL$ += ' = ';
016900180425          endif;
017000180425          //================================================
017100180425          SQL$ += ''''+%trim(Value)+'''';
017200180128          //================================================
017300180425       on-error;
017400180926          ERR03();
017500180128       endmon;
017600180128      /end-free
017700180128      *=====================================================
017800181221     p                 e
017900180128      *===============================================================
018000180926      *& Build Numeric into SQL String <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
018100181227     p DRVSRV@02C      b                   export
018200181221     d                 pi
018300180425     d  UIName                       50    const
018400180425     d  DBName                       10    const
018500160608      *=====================================================
018600180425     d Pos             s             10i 0
018700180425     d Value           s           1024
018800180425      *=====================================================
018900160608      /free
019000160608       monitor;
019100160608          //================================================
019200180927          Pos = %scan('"'+%trim(UIName)+'":"':InpData);
019300180425          //================================================
019400180425          if Pos = 0;
019500180425             return;
019600180425          endif;
019700180425          //================================================
019800190124          IDP += Pos+(%len(%trim(UIName)) + 3);
019900180425          //================================================
020000180927          if %subst(InpData:1:1) = '"';
020100180425             return;
020200180425          endif;
020300180425          //================================================
020400180425          if %len(SQL$) > 0;
020500180425             SQL$ += ' AND ';
020600180425          endif;
020700180425          //================================================
020800180425          SQL$ += %trim(DBName);
020900180425          //================================================
021000180927          Pos = %scan('"':InpData);
021100180927          Value = %subst(InpData:1:Pos-1);
021200180425          //================================================
021300180425          if %scan('%':Value) > 0;
021400180425             SQL$ += ' LIKE ' + ''''+%trim(Value)+'''';
021500180425          else;
021600180425             SQL$ += ' = ' + %trim(Value);
021700180425          endif;
021800180425          //================================================
021900180425       on-error;
022000180926          ERR03();
022100160608       endmon;
022200160608      /end-free
022300160608      *=====================================================
022400181221     p                 e
022500160608      *===============================================================
022600180926      *& Build ISO Date into SQL String <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
022700181227     p DRVSRV@02D      b                   export
022800180503     d                 pi
022900180503     d  UIName                       50    const
023000180503     d  DBName                       10    const
023100180503      *=====================================================
023200180503     d Pos             s             10i 0
023300180503     d Value           s           1024
023400180503      *=====================================================
023500180503      /free
023600180503       monitor;
023700180503          //================================================
023800180927          Pos = %scan('"'+%trim(UIName)+'":"':InpData);
023900180503          //================================================
024000180503          if Pos = 0;
024100180503             return;
024200180503          endif;
024300180503          //================================================
024400190124          IDP += Pos+(%len(%trim(UIName)) + 3);
024500180503          //================================================
024600180927          if %subst(InpData:1:1) = '"';
024700180503             return;
024800180503          endif;
024900180503          //================================================
025000180503          if %len(SQL$) > 0;
025100180503             SQL$ += ' AND ';
025200180503          endif;
025300180503          //================================================
025400180508          SQL$ += 'CHAR('+%trim(DBName)+',ISO)';
025500180503          //================================================
025600180927          Pos = %scan('"':InpData);
025700180927          Value = %subst(InpData:1:Pos-1);
025800180503          //================================================
025900180503          if %scan('%':Value) > 0;
026000180503             SQL$ += ' LIKE ';
026100180503          else;
026200180503             SQL$ += ' = ';
026300180503          endif;
026400180503          //================================================
026500180503          SQL$ += ''''+%trim(Value)+'''';
026600180503          //================================================
026700180503       on-error;
026800180926          ERR03();
026900180503       endmon;
027000180503      /end-free
027100180503      *=====================================================
027200180503     p                 e
027300180503      *===============================================================
027400180926      *& Encode JSON Special Characters <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
027500181227     p DRVSRV@02E      b                   export
027600180509     d                 pi           256    varying
027700180509     d  Value                       256
027800180509     d  Length                        5i 0 const
027900180508      *=====================================================
028000180509     d P1              s               *
028100180509     d Val1            s              1    based(P1)
028200180508      *=====================================================
028300180509     d RetVal          s            256
028400180509     d R1              s               *   inz(%addr(RetVal))
028500180509     d Ret1            s              1    based(R1)
028600180509     d Ret3            s              3    based(R1)
028700180508      *=====================================================
028800180508     d I               s              5i 0
028900180509     d Pos             s              5i 0
029000180509     d Len             s              5i 0
029100180508      *=====================================================
029200180508      /free
029300180508       monitor;
029400180508          //================================================
029500180509          P1  = %addr(Value);
029600180509          Len = %len(%trim(%subst(Value:1:Length)));
029700180509          clear RetVal;
029800180508          //================================================
029900180509          for I = 1 to Len;
030000180509              //============================================
030100180509              Pos = %scan(Val1:Specials);
030200180509              //============================================
030300180509              if Pos = 0;
030400180509                 Ret1 = Val1;
030500180509                 P1 += 1;
030600180509                 R1 += 1;
030700180509                 iter;
030800180509              endif;
030900180509              //============================================
031000180509              Ret3 = '%'+Hex(Pos);
031100180509              P1  += 1;
031200180509              R1  += 3;
031300180509              iter;
031400180509              //============================================
031500180508          endfor;
031600180508          //================================================
031700180509          return %trim(RetVal);
031800180508          //================================================
031900180508       on-error;
032000180926          ERR03();
032100180508       endmon;
032200180508      /end-free
032300180508      *=====================================================
032400180508     p                 e
032500180508      *===============================================================
032600180926      *& Unpack Next Key/Value Pair <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
032700181227     p DRVSRV@02F      b                   export
032800180515      *=====================================================
032900180516     d P1              s             10i 0
033000180517     d ValOut          s            256    varying
033100180515      *=====================================================
033200180515      /free
033300180515       monitor;
033400180515          //================================================
033500180927          P1 = %check(' ':InpData);  // Skip Spaces
033600190124          IDP += (P1-1);        // Start of Key
033700180517          //================================================
033800180927          if InpData1  = '"';
033900190124             IDP += 1;
034000180517          else;
034100180926             ERR11('ERR0030':'ERRMSGF'); //JSON Object - Ill-formed or misaligned
034200180517          endif;
034300180517          //================================================
034400180927          P1 = %scan('"':InpData);
034500180927          KV.Key = %trim(%subst(InpData:1:P1-1));
034600180516          //================================================
034700180927          P1 = %scan(':':InpData);   // Key/Value Separator
034800190124          IDP += P1;
034900180517          //================================================
035000180927          P1 = %check(' ':InpData);  // Skip Spaces
035100190124          IDP += (P1-1);        // Start of Value
035200180517          //================================================
035300181002          if InpData1  = '[';
035400190124             IDP += 1;
035500181002             KV.Value = '[';
035600181002             return;
035700181002          endif;
035800181002          //================================================
035900180927          if InpData1  = '"';
036000190124             IDP += 1;
036100180517          endif;
036200180517          //================================================
036300180517          clear ValOut;
036400180517          //================================================
036500180516          dow 0=0;
036600180516              select;
036700180927                  when InpData1  = '"';
036800190124                       IDP += 1;
036900180927                  when InpData1  = ',';
037000190124                       IDP += 1;
037100180517                       leave;
037200180927                  when InpData1  = '}';
037300180517                       leave;
037400180517                  other;
037500180927                       ValOut += InpData1;
037600190124                       IDP += 1;
037700180517              endsl;
037800180517          enddo;
037900180517          //================================================
038000180517          KV.Value = ValOut;
038100180517          //================================================
038200180515       on-error;
038300180926          ERR03();
038400180515       endmon;
038500180515      /end-free
038600180515      *=====================================================
038700180515     p                 e
038800180515      *===============================================================
038900181002      *& Unpack Array Elements <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
039000181227     p DRVSRV@02G      b                   export
039100181002     d                 pi          1024
039200181002      *=====================================================
039300181002     d P1              s             10i 0
039400181002     d DataOut         s           1024    varying
039500181002      *=====================================================
039600181002      /free
039700181002       monitor;
039800181002          //================================================
039900181002          P1 = %check(' ':InpData);  // Skip Spaces
040000190124          IDP += (P1-1);        // Start of Key
040100181002          //================================================
040200181002          if InpData1 <> '"';
040300181002             ERR11('ERR0080':'ERRMSGF'); //Column array - Ill-formed or misaligned
040400181002          else;
040500190124             IDP += 1;
040600181002          endif;
040700181002          //================================================
040800181002          P1 = %scan('"':InpData);
040900181002          DataOut = %trim(%subst(InpData:1:P1-1));
041000190124          IDP += P1;
041100181002          //================================================
041200181002          P1 = %check(' ':InpData);  // Skip Spaces
041300190124          IDP += (P1-1);        // Start of Key
041400181002          //================================================
041500181002          if InpData1 = ']';
041600181002             return DataOut;
041700181002          endif;
041800181002          //================================================
041900181002          if InpData1 = ',';
042000190124             IDP += P1;
042100181002          endif;
042200181002          //================================================
042300181002          return DataOut;
042400181002          //================================================
042500181002       on-error;
042600181002          ERR03();
042700181002       endmon;
042800181002      /end-free
042900181002      *=====================================================
043000181002     p                 e
043100181002      *===============================================================

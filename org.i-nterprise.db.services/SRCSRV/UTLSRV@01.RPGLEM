      *&==============================================================
      *  Copyright (c) 2008-2018 TEMBO Technology Lab (Pty) Ltd.
      *  Created by AO Foundation - www.adsero-optima.com
      *  Original TEMPLATE author: Tommy Atkins - Chief Development Officer
      *
      *  Licensed under the Apache License, Version 2.0 (the "License");
      *  you may not use this file except in compliance with the License.
      *  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
      *
      *  Unless required by applicable law or agreed to in writing, software
      *  distributed under the License is distributed on an "AS IS" BASIS,
      *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      *  See the License for the specific language governing permissions and
      *  limitations under the License.
      *
      *  The above copyright notice and this permission notice shall be included in all
      *  copies or substantial portions of the Software.
      *
      *                      http://www.adsero-optima.com/
      *===============================================================
     h nomain aut(*use)
      *===============================================================
      *& Open Source Utility Procdures
      *  EXPORT SYMBOL(OPNWRK)    /* Open & Initialize "Work with" Panel  */
      *  EXPORT SYMBOL(GETV)      /* Get Dialog Variable (GETV)           */
      *  EXPORT SYMBOL(PUTV)      /* Put Dialog Variable (PUTV)           */
      *  EXPORT SYMBOL(DSPPN)     /* Display Panel (New Task)             */
      *  EXPORT SYMBOL(SETLSTTOP) /* Set List Attributes to TOP           */
      *  EXPORT SYMBOL(SETLSTALL) /* Set List Attributes to ALL           */
      *  EXPORT SYMBOL(ADDLSTLE)  /* Add Entry to End of List             */
      *  EXPORT SYMBOL(DSPPO)     /* Display Panel (Old Task) > FunReq    */
      *  EXPORT SYMBOL(REFRESH)   /* Refresh List [and Change Loader]     */
      *  EXPORT SYMBOL(DLTL)      /* Delete List                          */
      *  EXPORT SYMBOL(SETSC)     /* Set Screen Image                     */
      *  EXPORT SYMBOL(ADDPW)     /* Add Pop-Up Window                    */
      *  EXPORT SYMBOL(RMVPW)     /* Remove Pop-Up Window                 */
      *& Prototypes ==================================================
      /copy SRCCPY,ERR03#                        Move *DIAG and Resend *ESCAPE Messages
      /copy SRCCPY,U_OPNWRK                      APPH = OPNWRK('pnlgrp':ptr:len:[rec]);
      /copy SRCCPY,U_GETV                        GETV(APPH:ptr:len:['rec']);
      /copy SRCCPY,U_PUTV                        PUTV(APPH:ptr:len:['rec']);
      /copy SRCCPY,U_DSPPN                       [funreq =] DSPPN(APPH:'panel');
      /copy SRCCPY,U_SETLATOP                    SETLATOP(APPH:[listname']);
      /copy SRCCPY,U_SETLAALL                    SETLSTALL(APPH:[listname']);
      /copy SRCCPY,U_ADDLLE                      ADDLSTLE(APPH:recp:recl:'record');
      /copy SRCCPY,U_DSPPO                       FUNREQ = DSPPO(APPH:PnlId)
      /copy SRCCPY,U_REFRESH                     REFRESH(P.APPH:['NEWLOAD'])
      /copy SRCCPY,U_DLTL                        DLTL(APPH:[listname']);
      /copy SRCCPY,U_SETSC                       SETSC(APPH);
      /copy SRCCPY,U_ADDPW                       ADDPW(P.APPH:['*ROWCOL':nn:nn]);
      /copy SRCCPY,U_RMVPW                       RMVPW(P.APPH);
      *===============================================================
      /copy SRCCPY,API_EC#                       API Error Data Structure
      *& API Parameters===============================================
     d QUIOPNDA        pr                  extpgm('QUIOPNDA')
     d  APPH                          8
     d  PnlGrp                       20    const
     d  Scope                        10i 0 const
     d  ExitPI                       10i 0 const
     d  FSHelp                        1    const
     d  ErrCode                            like(EC)
     d QUIGETV         pr                  extpgm('QUIGETV')
     d  APPH                          8    const
     d  Buffer                     1024    const options(*varsize)
     d  BufLen                       10i 0 const
     d  RecName                      10    const
     d  ErrC                               Like(EC)
     d QUIPUTV         pr                  extpgm('QUIPUTV')
     d  APPH                          8    const
     d  Buffer                     1024    const options(*varsize)
     d  BufLen                       10i 0 const
     d  RecName                      10    const
     d  ErrC                               Like(EC)
     d QUIDSPP         pr                  extpgm('QUIDSPP')
     d  APPH                          8    const
     d  FunReq                       10i 0
     d  PnlName                      10    const
     d  ReDsp                         1    const
     d  ErrC                               like(EC)
      *
     d  UserTask                      1    const
     d  CallStackCntr                10i 0 const
     d  CallMsgQueue                 10    const
     d  MsgRefKey                     4    const
     d  CsrPosOpt                     1    const
     d  LastListEnt                   4    const
     d  ErrListEnt                    4    const
     d  WaitTime                     10i 0 const
      *
     d  CallMsgQNameL                10i 0 const
     d  CallQual                     20    const
     d QUISETLA        pr                  extpgm('QUISETLA')
     d  APPH                          8    const
     d  ListN                        10    const
     d  ListC                         4    const
     d  LoadV                        10    const
     d  PosAtr                        4    const
     d  Trim                          1    const
     d  ErrC                               Like(EC)
     d QUIADDLE        pr                  extpgm('QUIADDLE')
     d  APPH                          8    const
     d  Rec                        1024    const options(*varsize)
     d  RecLen                       10i 0 const
     d  RecName                      10    const
     d  ListName                     10    const
     d  Option                        4    const options(*varsize)
     d  ListEH                        4    const
     d  ErrC                               Like(EC)
     d QUIDLTL         pr                  extpgm('QUIDLTL')
     d  APPH                          8    const
     d  ListName                     10    const
     d  ErrC                               Like(EC)
     d QUISETSC        pr                  extpgm('QUISETSC')
     d  APPH                          8    const
     d  ErrC                               Like(EC)
     d QUIADDPW        pr                  extpgm('QUIADDPW')
     d  APPH                          8    const
     d  Loc                          10    const
     d  Row                          10i 0 const
     d  Col                          10i 0 const
     d  ErrC                               Like(EC)
     d QUIRMVPW        pr                  extpgm('QUIRMVPW')
     d  APPH                          8    const
     d  RmvOpt                        1    const
     d  ErrC                               Like(EC)
      *==============================================================
     d CQ              s             20    inz('*NONE     *NONE')
     d APPH            s              8
     d LEH             s              4
      *===============================================================
      *& OPNWRK: Open & Initialize "Work with" Panel
      *===============================================================
     p OPNWRK          b                   export
     d OPNWRK          pi             8
     d  PnlGrp                       10    const
     d  IniP                           *   const
     d  IniL                         10i 0 const
     d  IniR                         10    const options(*nopass)
      *=====================================================
      /free
       monitor;
          //================================================
          QUIOPNDA(APPH:PnlGrp+'*LIBL':-1:0:'N':EC);
          //================================================
          select;
              when %parms = 3; // Required Parameter Group
                   PUTV(APPH:IniP:IniL:'PGPINI');
              when %parms > 3; // Optional Parameter Group 1
                   PUTV(APPH:IniP:IniL:IniR);
          endsl;
          //================================================
          SETLSTTOP(APPH);
          //================================================
          return APPH;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
     p                 e
      *===============================================================
      *& GETV: Get Dialog Variable (GETV)
      *===============================================================
     p GETV            b                   export
     d GETV            pi
     d  APPH                          8    const
     d  RecP                           *   const
     d  RecL                         10i 0 const
     d  RecN                         10    const options(*nopass)
      *=====================================================
     d Rec             s           2048    based(RecP)
      *=====================================================
      /free
       monitor;
          //================================================
          select;
              when %parms=3; // Required Parameter Group
                   QUIGETV(APPH:Rec:RecL:'RECORD':EC);
              when %parms=4; // Optional Parameter Group 1
                   QUIGETV(APPH:Rec:RecL:RecN:EC);
          endsl;
          //================================================
          return;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
     p                 e
      *===============================================================
      *& PUTV: Put Dialog Variable (PUTV)
      *===============================================================
     p PUTV            b                   export
     d PUTV            pi
     d  APPH                          8    const
     d  RecP                           *   const
     d  RecL                         10i 0 const
     d  RecN                         10    const options(*nopass)
      *=====================================================
     d Rec             s           2048    based(RecP)
      *=====================================================
      /free
       monitor;
          //================================================
          select;
              when %parms=3;
                   QUIPUTV(APPH:Rec:RecL:'RECORD':EC);
              when %parms=4;
                   QUIPUTV(APPH:Rec:RecL:RecN:EC);
          endsl;
          //================================================
          return;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
      *=====================================================
     p                 e
      *===============================================================
      *& DSPPN: Display Panel (New Task) > FunReq
      *===============================================================
     p DSPPN           b                   export
     d                 pi            10i 0
     d  APPH                          8    const
     d  PnlId                        10    const
      *=====================================================
     d FR              s             10i 0
      *=====================================================
      /free
       monitor;
          //================================================
          QUIDSPP(APPH:FR:PnlId:'N':EC:
                  'N':0:'*CALLER':' ':'D':'NONE':'NONE':-1:10:CQ);
          //================================================
          return FR;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
      *=====================================================
     p                 e
      *===============================================================
      *& DSPPO: Display Panel (Old Task) > FunReq
      *===============================================================
     p DSPPO           b                   export
     d                 pi            10i 0
     d  APPH                          8    const
     d  PnlId                        10    const
      *=====================================================
     d FR              s             10i 0
      *=====================================================
      /free
       monitor;
          //================================================
          QUIDSPP(APPH:FR:PnlId:'N':EC:
                  'O':0:'*CALLER':' ':'D':'NONE':'NONE':-1:10:CQ);
          //================================================
          return FR;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
     p                 e
      *=====================================================================
      *& SETLSTTOP: Set List Attributes to TOP
      *===============================================================
     p SETLSTTOP       b                   export
     d                 pi
     d  APPH                          8    const
     d  ListN                        10    const options(*nopass)
      *=====================================================
      /free
       monitor;
          //================================================
          if %parms = 1;
             QUISETLA(APPH:'WRKLST':'TOP':'LDR':'TOP':'N':EC);
          else;
             QUISETLA(APPH:ListN:'TOP':'LDR':'TOP':'N':EC);
          endif;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
      *=====================================================
     p                 e
      *===============================================================
      *& SETLSTALL: Set List Attributes to ALL
      *===============================================================
     p SETLSTALL       b                   export                               *
     d                 pi
     d  APPH                          8    const
     d  ListN                        10    const options(*nopass)
      *=====================================================
      /free
       monitor;
          //================================================
          if %parms = 1;
             QUISETLA(APPH:'WRKLST':'ALL':'*SAME':'SAME':'S':EC);
          else;
             QUISETLA(APPH:ListN:'ALL':'*SAME':'SAME':'S':EC);
          endif;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
     p                 e
      *===============================================================
      *& ADDLSTLE: Add Entry to End of List
      *===============================================================
     p ADDLSTLE        b                   export                               *
     d                 pi
     d  APPH                          8    const
     d  RecP                           *   const
     d  RecL                         10i 0 const
     d  RecN                         10    const
     d  ListN                        10    const options(*nopass)
      *=====================================================
     d Rec             s           2048    based(RecP)
      *=====================================================
      /free
       monitor;
          //================================================
          if %parms = 5;
             QUIADDLE(APPH:Rec:RecL:RecN:ListN:'LAST':LEH:EC);
          else;
             QUIADDLE(APPH:Rec:RecL:RecN:'WRKLST':'LAST':LEH:EC);
          endif;
          //================================================
          return;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
     p                 e
      *===============================================================
      *& REFRESH: Refresh List Contents [Change Loader]
      *===============================================================
     p REFRESH         b                   export
     d                 pi
     d  APPH                          8    const
     d  NewLoad                      10    const options(*nopass)
      *=====================================================
     d LP              s               *   inz(%addr(Loader))
     d Loader          ds            20
     d  LoadPgm                      10
     d  LoadLib                      10
      *=====================================================
     d CloseLoad       pr                  extpgm(LoadPgm)
     d  Parms                              like(P)
      *=====================================================
      /copy SRCCPY,U_LDRPL                       Loader Input Parameter List
      *=====================================================
      /free
       monitor;
          //================================================
          GETV(APPH:LP:20:'LOADPGM');
          //================================================
          P.Type = 99;
          P.APPH = APPH;
          CloseLoad(P);
          //================================================
          DLTL(APPH);
          SETLSTTOP(APPH);
          //================================================
          if %parms = 2;
             LoadPgm = NewLoad;
             PUTV(APPH:LP:20:'LOADPGM');
          endif;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
     p REFRESH         e
      *===============================================================
      *& Delete List
      *===============================================================
     p DLTL            b                   export                               *
     d                 pi
     d  APPH                          8    const
     d  ListN                        10    const options(*nopass)
      *=====================================================
      /free
       monitor;
          //================================================
          if %parms = 2;
             QUIDLTL(APPH:ListN:EC);
          else;
             QUIDLTL(APPH:'WRKLST':EC);
          endif;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
     p                 e
      *===============================================================
      *& Set Screen Image
      *===============================================================
     p SETSC           b                   export
     d                 pi
     d  APPH                          8    const
      *=====================================================
      /free
       monitor;
          //================================================
          QUISETSC(APPH:EC);
          return;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
     p                 e
      *=====================================================================
      *& Add Pop-Up Window
      *=====================================================================
     p ADDPW           b                   export
     d                 pi
     d  APPH                          8    const
     d  Loc                          10    const options(*nopass)
     d  Row                          10i 0 const options(*nopass)
     d  Col                          10i 0 const options(*nopass)
      *=====================================================
      /free
       monitor;
          //================================================
          select;
              when %parms = 1; // Required Parameter Group
                   QUIADDPW(APPH:'POW':0:0:EC);
              when %parms > 1; // Optional Parameter Group 1
                   select;
                       when Loc = '*ROWCOL';
                            QUIADDPW(APPH:Loc:Row:Col:EC);
                       other;
                            QUIADDPW(APPH:Loc:0:0:EC);
                   endsl;
          endsl;
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
     p                 e
      *=====================================================================
      *& Remove Pop-Up Window
      *=====================================================================
     p RMVPW           b                   export
     d                 pi
     d  APPH                          8    const
      *=====================================================
      /free
       monitor;
          //================================================
          QUIRMVPW(APPH:'L':EC);
          //================================================
       on-error;
          ERR03();
       endmon;
      /end-free
     p                 e
      *=====================================================================
